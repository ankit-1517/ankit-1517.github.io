{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"Operating Systems","tech":["C","OS"],"github":"https://github.com/ankit-1517/Operating-Systems-Projects","external":null},"html":"<p>Implemented</p>\n<ul>\n<li>Memory allocator (malloc and free)</li>\n<li>Page table simulation</li>\n<li>Reader and writer preference rw locks</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Computer Networks","tech":["C++","libcurl"],"github":"https://github.com/ankit-1517/Computer-Networks","external":null},"html":"<p>Downloader for downloading large files, spreading connection between servers, while being resilient to disconnections</p>"}},{"node":{"frontmatter":{"title":"Networks and Systems Security","tech":["C++","Python","Security"],"github":"https://github.com/ankit-1517/Networks-and-Systems-Security","external":null},"html":"<ul>\n<li>Implemented (and cracked) the RSA &#x26; the Birthday Attack on SHA-3</li>\n<li>Implemented the TLS protocol to securely send a message</li>\n<li>Performed security comparison of IITD email and Gmail MHS</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Distributed Systems","tech":["C++"],"github":"https://github.com/ankit-1517/Distributed-Systems","external":null},"html":"<ul>\n<li>Implemented Pastry, supporting addition/deletion of nodes, lookups &#x26; addition</li>\n<li>Simulated the GHS algorithm to find MST of a graph</li>\n<li>Implemented a Bitcoin system with multi-transaction support</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Complier Design","tech":["C++","LLVM"],"github":"https://github.com/ankit-1517/Compiler-Design","external":null},"html":"<ul>\n<li>Emitted LLVM IR for the C code it is able to parse, running as expected using the LLVM interpreter lli</li>\n<li>Implemented local optimizations like local constant-folding and dead-code removal</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Parallel Programming","tech":["C++","MPI","OpenMP"],"github":"https://github.com/ankit-1517/Parallel-Programming","external":null},"html":"<ul>\n<li>Implemented Crout’s algorithm using MPI and OpenMP, reducing execution time by 50%</li>\n<li>Implemented and analysed tree-based and partition-based algorithms for sum using OpenMP</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Reinforcement Learning","tech":["Python","RL"],"github":"https://github.com/ankit-1517/Reinforcement-Learning","external":null},"html":"<p>Applied an array of Reinforcement Learning techniques to various challenging problems</p>"}},{"node":{"frontmatter":{"title":"Pacman AI","tech":["Python","AI"],"github":"https://github.com/ankit-1517/PacMan-AI","external":null},"html":"<p>Applied an array of AI techniques, such as informed state-space search and probabilistic inference, to playing Pac-Man.</p>"}},{"node":{"frontmatter":{"title":"NLP Based COVID Tweet Classification","tech":["Python","NLP","BERTweet"],"github":"https://github.com/ankit-1517/NLP-based-COVID-Tweet-Classification","external":null},"html":"<p>Repository for our paper \"Identification of Misinformation in COVID-19 Tweets Using BERTweet\", published at NLP4IF, 2021</p>"}},{"node":{"frontmatter":{"title":"Atari DQN","tech":["Python","RL"],"github":"https://github.com/ankit-1517/Atari-DQN","external":null},"html":"<p>Implemented DeepMind’s DQN and Linear Q-Net approximation to build an agent for the Atari Pong environment</p>"}},{"node":{"frontmatter":{"title":"GridWorld-using-MDP-and-Q-Learning","tech":["Python","RL"],"github":"https://github.com/ankit-1517/GridWorld-using-MDP-and-Q-Learning","external":null},"html":"<p>Solved the grid world problem using Markov Decision Process and Q-Learning with greedy exploration</p>"}},{"node":{"frontmatter":{"title":"Image Processing","tech":["Python","Tensorflow","OpenCV"],"github":"https://github.com/ankit-1517/Image-Processing","external":null},"html":"<p>Implementation of different image processing algorithms such as:</p>\n<ul>\n<li>Segmentation</li>\n<li>Wavelet Decomposition</li>\n<li>Morphology</li>\n<li>and many more...</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Information Retrieval","tech":["C++"],"github":"https://github.com/ankit-1517/Information-Retrieval","external":null},"html":"<p>Implemented various information retrieval techniques such as BM-25, TF-IDF model, Boolean retrieval and Inverted Index for large scal systems.</p>"}},{"node":{"frontmatter":{"title":"Intrusion Detection","tech":["Python","Security","ML"],"github":"https://github.com/ankit-1517/Intrusion-Detection","external":null},"html":"<p>Built ML models (Random Forest, LGBM &#x26; CatBoost being best 3) to detect suspicious network activity</p>"}},{"node":{"frontmatter":{"title":"Marker Based Augmented Reality","tech":["Python","OpenCV"],"github":"https://github.com/ankit-1517/Marker-Based-Augmented-Reality","external":null},"html":"<ul>\n<li>Generated a script for calibrating the external matrices for any given camera</li>\n<li>Created a 2D AR car motion using two different markers</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Robust Hand Gesture Recognition","tech":["Python","OpenCV","Machine Learning"],"github":"https://github.com/ankit-1517/Robust-Hand-Gesture-Recognition","external":null},"html":"<p>Designed a CNN model to train over hand images, segmented in the pre-processing step, to recognize hand gesture.</p>"}},{"node":{"frontmatter":{"title":"NER Using Bi-LSTM","tech":["Python","NER","Bi-LSTM"],"github":"https://github.com/ankit-1517/ner-bi-lstm","external":null},"html":"<p>Implemented Bi-LSTM with GloVe and character level word embeddings for NER task</p>"}},{"node":{"frontmatter":{"title":"Recursive Bayesian Estimation","tech":["Python","AI"],"github":"https://github.com/ankit-1517/Recursive-Bayesian-Estimation","external":null},"html":"<p>Implemented Recursive Bayesian Estimation for localizing a flying aeroplane using noisy sensor observations</p>"}},{"node":{"frontmatter":{"title":"Disk Based R-Tree","tech":["C++","Databases"],"github":"https://github.com/ankit-1517/dbms_rTree","external":null},"html":"<p>Implemented a disk-based version of R-Tree, supporting point and range queries</p>"}},{"node":{"frontmatter":{"title":"Brainfuck Interpreter","tech":["C++"],"github":"https://github.com/ankit-1517/Brainfuck-Interpreter","external":null},"html":"<p>A simple Brainfuck Interpreter, supporting some of the possible inputs.</p>"}},{"node":{"frontmatter":{"title":"Data Structures Projects","tech":["Java"],"github":"https://github.com/ankit-1517/Data-Structures-Projects","external":null},"html":"<p>Design a data structure that helps us solve a simplified version of the mobile phone tracking problem: when a phone is called, find where it is located so that a connection may be established.</p>"}},{"node":{"frontmatter":{"title":"ProvChain","tech":["Java","Blockchain","Cloud Computing"],"github":"https://github.com/ankit-1517/ProvChain","external":null},"html":"<p>Implemented a secure model using provenance database &#x26; blockchain in cloud using SHA-256 and RSA.</p>"}}]}}}